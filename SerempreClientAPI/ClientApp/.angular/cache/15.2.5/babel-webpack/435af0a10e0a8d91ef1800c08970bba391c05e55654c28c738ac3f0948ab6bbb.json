{"ast":null,"code":"import { CreateCityDialogComponent } from './dialog/create-city-dialog/create-city-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/button\";\nfunction CityComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CityComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CityComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r7.id, \" \");\n  }\n}\nfunction CityComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CityComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.name, \" \");\n  }\n}\nfunction CityComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\nfunction CityComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\nexport class CityComponent {\n  constructor(http, baseUrl, dialog) {\n    this.http = http;\n    this.dialog = dialog;\n    this.cities = [];\n    this.newCity = {\n      id: 0,\n      name: ''\n    };\n    this.displayedColumns = ['id', 'name'];\n    this.baseUrl = '';\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    this.http.get(this.baseUrl + 'city').subscribe(result => {\n      this.cities = result;\n    }, error => console.error(error));\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(CreateCityDialogComponent, {\n      data: this.newCity != null ? this.newCity : {}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.newCity = result;\n      if (this.newCity != null) {\n        this.http.post(this.baseUrl + 'city', {\n          name: this.newCity\n        }).subscribe(result => {\n          console.log(result);\n        }, error => console.error(error));\n      }\n    });\n  }\n}\nCityComponent.ɵfac = function CityComponent_Factory(t) {\n  return new (t || CityComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nCityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CityComponent,\n  selectors: [[\"app-city\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [1, \"row\", \"my-4\", \"float-end\"], [1, \"col-md-12\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"color\", \"success\", 1, \"mx-3\", \"btn\", \"btn-success\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 2, \"width\", \"100%\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function CityComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Cities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CityComponent_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CityComponent_Template_button_click_5_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(6, \"Crear ciudad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Exportar a excel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"table\", 6);\n      i0.ɵɵelementContainerStart(10, 7);\n      i0.ɵɵtemplate(11, CityComponent_th_11_Template, 2, 0, \"th\", 8);\n      i0.ɵɵtemplate(12, CityComponent_td_12_Template, 2, 1, \"td\", 9);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 10);\n      i0.ɵɵtemplate(14, CityComponent_th_14_Template, 2, 0, \"th\", 8);\n      i0.ɵɵtemplate(15, CityComponent_td_15_Template, 2, 1, \"td\", 9);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(16, CityComponent_tr_16_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵtemplate(17, CityComponent_tr_17_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.cities == null ? null : ctx.cities.length));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"dataSource\", ctx.cities);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow, i5.MatButton],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,yBAAyB,QAAQ,0DAA0D;;;;;;;;;ICFpGC,yBAA2B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAc1CA,8BAAsC;IAACA,oBAAG;IAAAA,iBAAK;;;;;IAC/CA,8BAAuC;IAACA,YAAe;IAAAA,iBAAK;;;;IAApBA,eAAe;IAAfA,8CAAe;;;;;IAKvDA,8BAAsC;IAACA,sBAAK;IAAAA,iBAAK;;;;;IACjDA,8BAAuC;IAACA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,gDAAiB;;;;;IAG3DA,yBAA4D;;;;;IAC5DA,yBAAkE;;;ADhBpE,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAgB,EACIC,OAAe,EAC5BC,MAAiB;IAFxB,SAAI,GAAJF,IAAI;IAEG,WAAM,GAANE,MAAM;IAP1B,WAAM,GAAa,EAAE;IACrB,YAAO,GAAW;MAACC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAC;IAC1C,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,CAAC;IAC3C,YAAO,GAAY,EAAE;IAKnB,IAAI,CAACH,OAAO,GAAGA,OAAO;EACxB;EAEAI,QAAQ;IACN,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,OAAO,GAAG,MAAM,CAAC,CAACM,SAAS,CAACC,MAAM,IAAG;MAChE,IAAI,CAACC,MAAM,GAAGD,MAAM;IACtB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACX,MAAM,CAACY,IAAI,CAAClB,yBAAyB,EAAE;MAC5DmB,IAAI,EAAE,IAAI,CAACC,OAAO,IAAI,IAAI,GAAG,IAAI,CAACA,OAAO,GAAG;KAC7C,CAAC;IAEFH,SAAS,CAACI,WAAW,EAAE,CAACV,SAAS,CAACC,MAAM,IAAG;MACzC,IAAI,CAACQ,OAAO,GAAGR,MAAM;MAErB,IAAG,IAAI,CAACQ,OAAO,IAAI,IAAI,EAAC;QACtB,IAAI,CAAChB,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACjB,OAAO,GAAG,MAAM,EAAC;UAACG,IAAI,EAAC,IAAI,CAACY;QAAO,CAAC,CAAC,CAACT,SAAS,CAACC,MAAM,IAAG;UAC3EG,OAAO,CAACQ,GAAG,CAACX,MAAM,CAAC;QACrB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;;IAErC,CAAC,CAAC;EACJ;;AAhCWZ,aAAa;mBAAbA,aAAa,4DAOI,UAAU;AAAA;AAP3BA,aAAa;QAAbA,aAAa;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1B3B,6BAAoB;MAAAA,sBAAM;MAAAA,iBAAK;MAE/BA,0DAAkD;MAElDA,8BAAgC;MAEcA;QAAA,OAAS4B,gBAAY;MAAA,EAAC;MAAC5B,4BAAY;MAAAA,iBAAS;MACtFA,iCAAsD;MAAAA,gCAAgB;MAAAA,iBAAS;MAInFA,gCAAqF;MAInFA,iCAAgC;MAC9BA,8DAA+C;MAC/CA,8DAA4D;MAC9DA,0BAAe;MAGfA,kCAAkC;MAChCA,8DAAiD;MACjDA,8DAA8D;MAChEA,0BAAe;MAEfA,+DAA4D;MAC5DA,+DAAkE;MACpEA,iBAAQ;;;MA1BJA,eAAqB;MAArBA,uEAAqB;MASRA,eAAqB;MAArBA,uCAAqB;MAehBA,eAAiC;MAAjCA,sDAAiC;MACpBA,eAA0B;MAA1BA,uDAA0B","names":["CreateCityDialogComponent","i0","CityComponent","constructor","http","baseUrl","dialog","id","name","ngOnInit","get","subscribe","result","cities","error","console","openDialog","dialogRef","open","data","newCity","afterClosed","post","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\city\\city.component.ts","C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\city\\city.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Cities } from './model/cities.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CreateCityDialogComponent } from './dialog/create-city-dialog/create-city-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.css']\r\n})\r\nexport class CityComponent implements OnInit {\r\n  public cities: Cities[] = [];\r\n  public newCity: Cities = {id: 0, name: ''};\r\n  displayedColumns: string[] = ['id', 'name'];\r\n  baseUrl :string =  '';\r\n\r\n  constructor(private http: HttpClient,\r\n                      @Inject('BASE_URL') baseUrl: string,\r\n                      public dialog: MatDialog){\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get<Cities[]>(this.baseUrl + 'city').subscribe(result => {\r\n      this.cities = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(CreateCityDialogComponent, {\r\n      data: this.newCity != null ? this.newCity : {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.newCity = result;\r\n\r\n      if(this.newCity != null){\r\n        this.http.post(this.baseUrl + 'city',{name:this.newCity}).subscribe(result => {\r\n          console.log(result);\r\n        }, error => console.error(error));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Cities</h1>\r\n\r\n<p *ngIf=\"!cities?.length\"><em>Loading...</em></p>\r\n\r\n<div class=\"row my-4 float-end\">\r\n  <div class=\"col-md-12\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Crear ciudad</button>\r\n    <button color=\"success\" class=\" mx-3 btn btn-success\">Exportar a excel</button>\r\n  </div>\r\n</div>\r\n\r\n<table mat-table [dataSource]=\"cities\" class=\"mat-elevation-z8\" style=\"width: 100%;\">\r\n\r\n\r\n  <!-- Id Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef> ID </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}