{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/table\";\nfunction CityComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CityComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CityComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r7.id, \" \");\n  }\n}\nfunction CityComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CityComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.name, \" \");\n  }\n}\nfunction CityComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 11);\n  }\n}\nfunction CityComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 12);\n  }\n}\nexport class CityComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.cities = [];\n    this.displayedColumns = ['id', 'name'];\n    this.baseUrl = '';\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    this.http.get(this.baseUrl + 'city').subscribe(result => {\n      this.cities = result;\n    }, error => console.error(error));\n  }\n}\nCityComponent.ɵfac = function CityComponent_Factory(t) {\n  return new (t || CityComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CityComponent,\n  selectors: [[\"app-city\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"table\", \"table-striped\", 2, \"width\", \"100%\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function CityComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Cities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CityComponent_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(3, \"table\", 2);\n      i0.ɵɵelementContainerStart(4, 3);\n      i0.ɵɵtemplate(5, CityComponent_th_5_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(6, CityComponent_td_6_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 6);\n      i0.ɵɵtemplate(8, CityComponent_th_8_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(9, CityComponent_td_9_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(10, CityComponent_tr_10_Template, 1, 0, \"tr\", 7);\n      i0.ɵɵtemplate(11, CityComponent_tr_11_Template, 1, 0, \"tr\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.cities == null ? null : ctx.cities.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.cities);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,yBAA2B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAO1CA,6BAAsC;IAACA,oBAAG;IAAAA,iBAAK;;;;;IAC/CA,8BAAuC;IAACA,YAAe;IAAAA,iBAAK;;;;IAApBA,eAAe;IAAfA,8CAAe;;;;;IAKvDA,6BAAsC;IAACA,sBAAK;IAAAA,iBAAK;;;;;IACjDA,8BAAuC;IAACA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,gDAAiB;;;;;IAG3DA,yBAA4D;;;;;IAC5DA,yBAAkE;;;ACZpE,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAJjB,WAAM,GAAa,EAAE;IAC5B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,CAAC;IAC3C,YAAO,GAAY,EAAE;IAGnB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEAC,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,OAAO,GAAG,MAAM,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MAChE,IAAI,CAACC,MAAM,GAAGD,MAAM;IACtB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAbWT,aAAa;mBAAbA,aAAa,4DAKsB,UAAU;AAAA;AAL7CA,aAAa;QAAbA,aAAa;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BhB,6BAAoB;MAAAA,sBAAM;MAAAA,iBAAK;MAE/BA,0DAAkD;MAElDA,gCAAyG;MAIvGA,gCAAgC;MAC9BA,4DAA+C;MAC/CA,4DAA4D;MAC9DA,0BAAe;MAGfA,gCAAkC;MAChCA,4DAAiD;MACjDA,4DAA8D;MAChEA,0BAAe;MAEfA,8DAA4D;MAC5DA,8DAAkE;MACpEA,iBAAQ;;;MAnBJA,eAAqB;MAArBA,uEAAqB;MAERA,eAAqB;MAArBA,uCAAqB;MAehBA,eAAiC;MAAjCA,sDAAiC;MACpBA,eAA0B;MAA1BA,uDAA0B","names":["i0","CityComponent","constructor","http","baseUrl","ngOnInit","get","subscribe","result","cities","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\city\\city.component.html","C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\city\\city.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Cities</h1>\n\n<p *ngIf=\"!cities?.length\"><em>Loading...</em></p>\n\n<table mat-table [dataSource]=\"cities\" class=\"mat-elevation-z8 table table-striped\" style=\"width: 100%;\">\n\n\n  <!-- Id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> ID </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n  public cities: Cities[] = [];\n  displayedColumns: string[] = ['id', 'name'];\n  baseUrl :string =  '';\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string){\n    this.baseUrl = baseUrl;\n  }\n\n  ngOnInit(): void {\n    this.http.get<Cities[]>(this.baseUrl + 'city').subscribe(result => {\n      this.cities = result;\n    }, error => console.error(error));\n  }\n}\ninterface Cities {\n  id: number;\n  name: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}