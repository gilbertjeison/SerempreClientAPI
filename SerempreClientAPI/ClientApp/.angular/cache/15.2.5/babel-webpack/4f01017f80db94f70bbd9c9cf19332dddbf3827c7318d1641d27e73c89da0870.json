{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/table\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r13.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r13.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r13.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r13.summary);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchDataComponent_table_5_tr_12_Template, 9, 4, \"tr\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nfunction FetchDataComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.date, \" \");\n  }\n}\nfunction FetchDataComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Temperature C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.temperatureC, \" \");\n  }\n}\nfunction FetchDataComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Temperature F \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.temperatureF, \" \");\n  }\n}\nfunction FetchDataComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Summary \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r17.summary, \" \");\n  }\n}\nfunction FetchDataComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\nfunction FetchDataComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    this.displayedColumns = ['date', 'temperatureC', 'temperatureF', 'summary'];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 21,\n  vars: 5,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"table\", \"table-striped\", 2, \"width\", \"100%\", 3, \"dataSource\"], [\"matColumnDef\", \"date\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"temperatureC\"], [\"matColumnDef\", \"temperatureF\"], [\"matColumnDef\", \"summary\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 13, 1, \"table\", 2);\n      i0.ɵɵelementStart(6, \"table\", 3);\n      i0.ɵɵelementContainerStart(7, 4);\n      i0.ɵɵtemplate(8, FetchDataComponent_th_8_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(9, FetchDataComponent_td_9_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 7);\n      i0.ɵɵtemplate(11, FetchDataComponent_th_11_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(12, FetchDataComponent_td_12_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 8);\n      i0.ɵɵtemplate(14, FetchDataComponent_th_14_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(15, FetchDataComponent_td_15_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 9);\n      i0.ɵɵtemplate(17, FetchDataComponent_th_17_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(18, FetchDataComponent_td_18_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(19, FetchDataComponent_tr_19_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵtemplate(20, FetchDataComponent_tr_20_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.forecasts == null ? null : ctx.forecasts.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.forecasts);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAIAA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAY7CA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAH3BA,eAAmB;IAAnBA,uCAAmB;IACnBA,eAA2B;IAA3BA,+CAA2B;IAC3BA,eAA2B;IAA3BA,+CAA2B;IAC3BA,eAAsB;IAAtBA,0CAAsB;;;;;IAdhCA,iCAAyF;IAG/EA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,4EAKK;IACPA,iBAAQ;;;;IANmBA,gBAAY;IAAZA,0CAAY;;;;;IAgBrCA,8BAAsC;IAACA,sBAAK;IAAAA,iBAAK;;;;;IACjDA,8BAAuC;IAACA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,iDAAiB;;;;;IAKzDA,8BAAsC;IAACA,+BAAc;IAAAA,iBAAK;;;;;IAC1DA,8BAAuC;IAACA,YAAyB;IAAAA,iBAAK;;;;IAA9BA,eAAyB;IAAzBA,yDAAyB;;;;;IAKjEA,8BAAsC;IAACA,+BAAc;IAAAA,iBAAK;;;;;IAC1DA,8BAAuC;IAACA,YAAyB;IAAAA,iBAAK;;;;IAA9BA,eAAyB;IAAzBA,yDAAyB;;;;;IAKjEA,8BAAsC;IAACA,yBAAQ;IAAAA,iBAAK;;;;;IACpDA,8BAAuC;IAACA,YAAoB;IAAAA,iBAAK;;;;IAAzBA,eAAoB;IAApBA,oDAAoB;;;;;IAG9DA,yBAA4D;;;;;IAC5DA,yBAAkE;;;AChDpE,OAAM,MAAOC,kBAAkB;EAI7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAH1D,cAAS,GAAsB,EAAE;IACxC,qBAAgB,GAAa,CAAC,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,CAAC;IAG9ED,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AARWR,kBAAkB;mBAAlBA,kBAAkB,4DAIS,UAAU;AAAA;AAJrCA,kBAAkB;QAAlBA,kBAAkB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/Bf,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAAqD;MAErDA,wEAiBQ;MAERA,gCAA4G;MAM1GA,gCAAkC;MAChCA,iEAAiD;MACjDA,iEAA8D;MAChEA,0BAAe;MAGfA,iCAA0C;MACxCA,mEAA0D;MAC1DA,mEAAsE;MACxEA,0BAAe;MAGfA,iCAA0C;MACxCA,mEAA0D;MAC1DA,mEAAsE;MACxEA,0BAAe;MAGfA,iCAAqC;MACnCA,mEAAoD;MACpDA,mEAAiE;MACnEA,0BAAe;MAEfA,oEAA4D;MAC5DA,oEAAkE;MACpEA,iBAAQ;;;MApDJA,eAAwB;MAAxBA,6EAAwB;MAEqCA,eAAsB;MAAtBA,2CAAsB;MAmBtEA,eAAwB;MAAxBA,0CAAwB;MA6BnBA,gBAAiC;MAAjCA,sDAAiC;MACpBA,eAA0B;MAA1BA,uDAA0B","names":["i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","forecasts","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\DevMaster\\OneDrive\\Projects\\.Net\\SerempreClientAPI\\SerempreClientAPI\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<table mat-table [dataSource]=\"forecasts\" class=\"mat-elevation-z8 table table-striped\" style=\"width: 100%;\">\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"date\">\r\n    <th mat-header-cell *matHeaderCellDef> Date </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"temperatureC\">\r\n    <th mat-header-cell *matHeaderCellDef> Temperature C </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.temperatureC}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container matColumnDef=\"temperatureF\">\r\n    <th mat-header-cell *matHeaderCellDef> Temperature F </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.temperatureF}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container matColumnDef=\"summary\">\r\n    <th mat-header-cell *matHeaderCellDef> Summary </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.summary}} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n  displayedColumns: string[] = ['date', 'temperatureC', 'temperatureF', 'summary'];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}